{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\textin-app\\\\src\\\\components\\\\middleComponent.js\";\nimport React, { Component } from 'react';\nimport ReceiveMessage from \"./chatComponents/receivemessage\";\nimport SendMessage from './chatComponents/sendmessage';\nimport { UserContext } from '../contexts/userContext';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\n\nrequire(\"dotenv\").config();\n\nvar FontAwesome = require('react-fontawesome');\n\nclass MiddleComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scrollUpdate: false,\n      date: \"pops\",\n      lastmsg: null\n    };\n\n    this.newmsgFormat = cnt => {\n      if (cnt === 1) return cnt + \" new message\";else {\n        return cnt + \" new messages\";\n      }\n    };\n\n    this.formatDisplay = msg => {\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var msg_sent = new Date(msg.sentTime);\n      var t_now = new Date();\n      let month = months[msg_sent.getMonth()].slice(0, 3);\n      let day = days[msg_sent.getDay()].slice(0, 3);\n      let date = msg_sent.getDate();\n\n      if (msg_sent.getFullYear() === t_now.getFullYear()) {\n        if (msg_sent.getMonth() === t_now.getMonth()) {\n          if (msg_sent.getDate() === t_now.getDate()) {\n            return \"Today\";\n          }\n\n          if (t_now.getDate() - msg_sent.getDate() === 1) return \"Yesterday\";\n          if (t_now.getDate() - msg_sent.getDate() <= 7) return days[msg_sent.getDay()];else {\n            return day + \",\" + date + \" \" + month;\n          }\n        } else {\n          return day + \",\" + date + \" \" + month;\n        }\n      } else {\n        return day + \",\" + date + \" \" + month + \",\" + msg_sent.getFullYear().toString().slice(-2);\n      }\n    };\n\n    this.formatMaindate = (msg, lastMsg) => {\n      var msg_sent = new Date(msg.sentTime);\n\n      if (lastMsg == null) {\n        return true;\n      } else {\n        let lastmsg = new Date(lastMsg.sentTime);\n\n        if (lastmsg.getFullYear() === msg_sent.getFullYear() && lastmsg.getMonth() === msg_sent.getMonth() && lastmsg.getDate() === msg_sent.getDate()) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    };\n\n    this.backtoleft = () => {\n      this.setState({\n        scrollUpdate: false\n      });\n      const {\n        updatecnt,\n        seenInContext,\n        receiver,\n        onlineBottomUpdate\n      } = this.context;\n      onlineBottomUpdate(false);\n      seenInContext(receiver._id);\n      updatecnt(0);\n      document.querySelector(\".leftHome\").style.display = \"flex\";\n      document.querySelector(\".middleHome\").style.display = \"none\";\n    };\n\n    this.openSearch = () => {\n      let em = parseFloat(getComputedStyle(document.querySelector('body'))['font-size']);\n      let width = window.innerWidth / em;\n      let height = window.innerHeight / em;\n      const container = document.getElementById(\"chatScroll\");\n\n      if (width < 90 || height < 41) {\n        if (container.scrollHeight - container.scrollTop !== container.offsetHeight) document.getElementById(\"myBtn\").style.display = \"grid\";\n        document.querySelector(\".rightHome\").style.display = \"flex\";\n        document.querySelector(\".middleHome\").style.display = \"none\";\n      }\n    };\n\n    this.handleScroll = e => {\n      const {\n        onlineBottomUpdate\n      } = this.context;\n      onlineBottomUpdate(false);\n      const scrollButton = document.getElementById(\"myBtn\");\n      const container = document.getElementById(\"chatScroll\");\n      let t = container.querySelectorAll(\".date-main\");\n\n      for (let i = 0; i < t.length; i++) {\n        if (t[i].offsetTop < container.scrollTop + 120) {\n          this.setState({\n            date: t[i].textContent\n          });\n        }\n      }\n\n      document.querySelector(\".date\").style.display = \"table\";\n\n      if (container.scrollHeight - container.scrollTop === container.offsetHeight) {\n        document.querySelector(\".date\").style.display = \"none\";\n      }\n\n      if (container.scrollHeight - container.scrollTop >= container.offsetHeight + container.offsetHeight / 2) {\n        scrollButton.style.display = \"grid\";\n      }\n\n      if (container.scrollHeight - container.scrollTop < container.offsetHeight + container.offsetHeight / 2) {\n        scrollButton.style.display = \"none\";\n      }\n\n      const {\n        receiver,\n        messages,\n        id\n      } = this.context;\n      var msg;\n      messages.map(chat => {\n        if (chat.Id === receiver._id) {\n          msg = chat.messages[0];\n        }\n\n        return 0;\n      });\n\n      if (0 === container.scrollTop && msg) {\n        this.setState({\n          scrollUpdate: true\n        });\n        document.querySelector(\".date\").style.display = \"none\";\n        axios.get(process.env.REACT_APP_BACKEND_URL + \"api/\" + id + \"/getmsg/\" + receiver._id + \"/\" + msg.id).then(res => {\n          this.setState({\n            scrollUpdate: false\n          });\n          const {\n            scrollUpdate\n          } = this.context;\n\n          if (res.data.messages.length) {\n            scrollUpdate(res.data.messages);\n          } else {\n            document.querySelector(\".top-msg-end\").style.display = \"grid\";\n            setTimeout(function () {\n              document.querySelector(\".top-msg-end\").style.display = \"none\";\n            }, 1000);\n          }\n        });\n      }\n    };\n\n    this.autoScroll = () => {\n      const container = document.getElementById(\"chatScroll\");\n      if (container) container.scrollTo(0, container.scrollHeight);\n    };\n\n    this.send = () => {\n      const {\n        postmessage,\n        msgBody,\n        updatecnt,\n        seenInContext,\n        receiver,\n        onlineBottomUpdate\n      } = this.context;\n\n      if (msgBody === \"\") {\n        return null;\n      }\n\n      const container = document.getElementById(\"chatScroll\");\n      let t = container.querySelectorAll(\".unread-msg-in-room\");\n\n      if (t.length) {\n        t[0].parentNode.style.marginBottom = \"-2px\";\n      }\n\n      onlineBottomUpdate(true);\n      updatecnt(0);\n      seenInContext(receiver._id);\n      postmessage();\n    };\n\n    this.formatSeen = lastSeen => {\n      var temp_now = new Date();\n      let day = lastSeen.getDate();\n      let year = lastSeen.getFullYear();\n      let month = lastSeen.getMonth() + 1;\n\n      if (temp_now.getFullYear() !== lastSeen.getFullYear() || temp_now.getMonth() !== lastSeen.getMonth()) {\n        return \"Last seen \" + day + \"/\" + month + \"/\" + year;\n      }\n\n      if (temp_now.getMonth() === lastSeen.getMonth()) {\n        if (temp_now.getDate() - day === 0) {\n          let hours = lastSeen.getHours();\n          let minutes = lastSeen.getMinutes();\n          let ampm = hours >= 12 ? 'PM' : 'AM';\n          hours = hours % 12;\n          hours = hours ? hours : 12; // the hour '0' should be '12'\n\n          minutes = minutes < 10 ? '0' + minutes : minutes;\n          let strTime = hours + ':' + minutes + ' ' + ampm;\n          return \"Last seen Today,at \" + strTime;\n        } else if (temp_now.getDate() - day === 1) {\n          let hours = lastSeen.getHours();\n          let minutes = lastSeen.getMinutes();\n          let ampm = hours >= 12 ? 'PM' : 'AM';\n          hours = hours % 12;\n          hours = hours ? hours : 12; // the hour '0' should be '12'\n\n          minutes = minutes < 10 ? '0' + minutes : minutes;\n          let strTime = hours + ':' + minutes + ' ' + ampm;\n          return \"Last seen Yesterday,at \" + strTime;\n        } else {\n          return \"Last seen \" + day + \"/\" + month + \"/\" + year;\n        }\n      }\n\n      var hours = lastSeen.getHours();\n      var minutes = lastSeen.getMinutes();\n      var ampm = hours >= 12 ? 'pm' : 'am';\n      hours = hours % 12;\n      hours = hours ? hours : 12; // the hour '0' should be '12'\n\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      var strTime = hours + ':' + minutes + ' ' + ampm;\n      return strTime;\n    };\n\n    this.softKeyboardView = () => {\n      let em = parseFloat(getComputedStyle(document.querySelector('body'))['font-size']);\n      let width = window.innerWidth / em;\n      let height = window.innerHeight / em;\n\n      if (width < 60 || height < 41) {\n        document.getElementById(\"chatInputBox\").scrollIntoView();\n      }\n    };\n\n    this.hideSoftKeyboardView = () => {\n      const {\n        typingEnd\n      } = this.context;\n      typingEnd(); //   let em = parseFloat( getComputedStyle( document.querySelector('body'))['font-size'])\n      //   let width = window.innerWidth / em\n      //   let height = window.innerHeight/ em\n      //   if(width<60||height<41)\n      //   {\n      //     document.querySelector(\".home\").style.height =\"100%\"\n      //   }\n    };\n\n    this.scrollButtonPress = () => {\n      const {\n        cntifup,\n        updatecntifup\n      } = this.context;\n      const container = document.getElementById(\"chatScroll\");\n\n      if (cntifup) {\n        let t = container.querySelectorAll(\".unread-msg-in-room\");\n\n        if (t) {\n          container.scrollTop = t[0].offsetTop - container.offsetTop - container.clientHeight / 2;\n          updatecntifup();\n        }\n      } else {\n        this.autoScroll();\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      middleFlag,\n      cnt,\n      onlineBottom,\n      Bottom,\n      updateBottom\n    } = this.context;\n    const container = document.getElementById(\"chatScroll\");\n\n    if (cnt && container && middleFlag) {\n      let t = container.querySelectorAll(\".unread-msg-in-room\");\n\n      if (t.length) {\n        t[0].parentNode.style.marginBottom = \"4px\";\n\n        for (let i = 1; i < t.length; i++) {\n          t[i].style.display = \"none\";\n        }\n      }\n    }\n\n    if (cnt && onlineBottom && container) {\n      let t = container.querySelector(\".unread-msg-in-room\");\n\n      if (t) {\n        container.style.scrollBehavior = \"auto\";\n        container.scrollTop = t.offsetTop - container.offsetTop - container.clientHeight / 2;\n        container.style.scrollBehavior = \"smooth\";\n      }\n    } else if (middleFlag && onlineBottom && container) {\n      container.style.scrollBehavior = \"auto\";\n      container.scrollTop = container.scrollHeight;\n      container.style.scrollBehavior = \"smooth\";\n    } else if (Bottom && container) {\n      container.style.scrollBehavior = \"auto\";\n      container.scrollTop = container.scrollHeight;\n      container.style.scrollBehavior = \"smooth\";\n      updateBottom(false);\n    }\n  }\n\n  render() {\n    const {\n      receiver,\n      middleFlag,\n      messages,\n      changeMsgBody,\n      msgBody,\n      seenOnRoom,\n      cnt,\n      cntifup\n    } = this.context;\n    return middleFlag ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleHome\",\n      id: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleHomeHeader\",\n      id: \"middleHomeHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"back-button\",\n      id: \"back-button\",\n      onClick: this.backtoleft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesome, {\n      name: \"backward\",\n      className: \"BackwardIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 92\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"#\",\n      src: receiver.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-username-section\",\n      onClick: this.openSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"receiverName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, receiver.username, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lastSeen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }\n    }, receiver.isOnline ? receiver.isTyping ? \"Typing....\" : \"Online\" : this.formatSeen(new Date(receiver.lastSeen))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-msg-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 16\n      }\n    }, \"That's it\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatScroll\",\n      onScroll: this.handleScroll,\n      id: \"chatScroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 16\n      }\n    }, this.state.scrollUpdate ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date-main loading-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://firebasestorage.googleapis.com/v0/b/texting--dp.appspot.com/o/dp%2Floading-msg.gif?alt=media&token=dbee82a0-8a49-4f88-8770-d89a06f5855b\",\n      alt: \"#\",\n      className: \"loading-symbol-inside-chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 80\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 289\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"outer-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    }, \"   \", /*#__PURE__*/React.createElement(\"p\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 43\n      }\n    }, this.state.date), \" \"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 16\n      }\n    }, messages.map(msg => {\n      if (msg.Id === receiver._id) {\n        var lastmsg = null;\n        return msg.messages.map(m => {\n          if (m.receiverId === receiver._id) {\n            if (this.formatMaindate(m, lastmsg)) {\n              lastmsg = m;\n              return /*#__PURE__*/React.createElement(\"li\", {\n                key: m.id,\n                id: \"sendTop\",\n                className: \"middle-message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 33\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                className: \"date-main\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 33\n                }\n              }, this.formatDisplay(m)), /*#__PURE__*/React.createElement(SendMessage, {\n                msgBody: m.msgBody,\n                sentTime: m.sentTime,\n                status: {\n                  sent: m.sent,\n                  delivered: m.delivered,\n                  seen: m.seen\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 30\n                }\n              }));\n            } else {\n              lastmsg = m;\n              return /*#__PURE__*/React.createElement(\"li\", {\n                key: m.id,\n                id: \"send\",\n                className: \"middle-message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 33\n                }\n              }, /*#__PURE__*/React.createElement(SendMessage, {\n                msgBody: m.msgBody,\n                sentTime: m.sentTime,\n                status: {\n                  sent: m.sent,\n                  delivered: m.delivered,\n                  seen: m.seen\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 30\n                }\n              }));\n            }\n          }\n\n          if (m.senderId === receiver._id) {\n            if (!m.seen && document.querySelector(\".middleHome\").style.display !== \"none\") {\n              seenOnRoom(m);\n            }\n\n            if (this.formatMaindate(m, lastmsg)) {\n              lastmsg = m;\n              return /*#__PURE__*/React.createElement(\"li\", {\n                key: m.id,\n                id: \"receiveTop\",\n                className: \"middle-message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 35\n                }\n              }, !m.seen ? /*#__PURE__*/React.createElement(\"p\", {\n                className: \"unread-msg-in-room\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 45\n                }\n              }, this.newmsgFormat(cnt)) : /*#__PURE__*/React.createElement(\"span\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 108\n                }\n              }), /*#__PURE__*/React.createElement(\"p\", {\n                className: \"date-main\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 35\n                }\n              }, this.formatDisplay(m)), /*#__PURE__*/React.createElement(ReceiveMessage, {\n                msgBody: m.msgBody,\n                sentTime: m.sentTime,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 31\n                }\n              }));\n            } else {\n              lastmsg = m;\n              return /*#__PURE__*/React.createElement(\"li\", {\n                key: m.id,\n                id: \"receive\",\n                className: \"middle-message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 37\n                }\n              }, !m.seen ? /*#__PURE__*/React.createElement(\"p\", {\n                className: \"unread-msg-in-room\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 41\n                }\n              }, this.newmsgFormat(cnt)) : /*#__PURE__*/React.createElement(\"span\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 104\n                }\n              }), /*#__PURE__*/React.createElement(ReceiveMessage, {\n                msgBody: m.msgBody,\n                sentTime: m.sentTime,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 31\n                }\n              }));\n            }\n          }\n\n          return null;\n        });\n      }\n\n      return null;\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.scrollButtonPress,\n      id: \"myBtn\",\n      title: \"press to go down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/down-arrow.png\",\n      alt: \"#\",\n      className: \"down-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 92\n      }\n    }), cntifup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"unseen-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 165\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center-cnt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 193\n      }\n    }, cntifup)) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 239\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onBlur: this.hideSoftKeyboardView,\n      id: \"chatInputBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.softKeyboardView,\n      onChange: e => {\n        changeMsgBody(e.target.value);\n      },\n      placeholder: \"Type Something...\",\n      className: \"messageInput\",\n      value: msgBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.send();\n      },\n      className: \"messageButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 19\n      }\n    }, \"Send\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middleHome middleEmpty\",\n      id: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }\n    }, \" Chat Room \"), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"middle-img\",\n      alt: \"#\",\n      src: \"./images/chatmiddle.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nMiddleComponent.contextType = UserContext;\nexport default MiddleComponent;","map":{"version":3,"sources":["D:/web/textin-app/src/components/middleComponent.js"],"names":["React","Component","ReceiveMessage","SendMessage","UserContext","Avatar","axios","require","config","FontAwesome","MiddleComponent","state","scrollUpdate","date","lastmsg","newmsgFormat","cnt","formatDisplay","msg","months","days","msg_sent","Date","sentTime","t_now","month","getMonth","slice","day","getDay","getDate","getFullYear","toString","formatMaindate","lastMsg","backtoleft","setState","updatecnt","seenInContext","receiver","onlineBottomUpdate","context","_id","document","querySelector","style","display","openSearch","em","parseFloat","getComputedStyle","width","window","innerWidth","height","innerHeight","container","getElementById","scrollHeight","scrollTop","offsetHeight","handleScroll","e","scrollButton","t","querySelectorAll","i","length","offsetTop","textContent","messages","id","map","chat","Id","get","process","env","REACT_APP_BACKEND_URL","then","res","data","setTimeout","autoScroll","scrollTo","send","postmessage","msgBody","parentNode","marginBottom","formatSeen","lastSeen","temp_now","year","hours","getHours","minutes","getMinutes","ampm","strTime","softKeyboardView","scrollIntoView","hideSoftKeyboardView","typingEnd","scrollButtonPress","cntifup","updatecntifup","clientHeight","componentDidUpdate","middleFlag","onlineBottom","Bottom","updateBottom","scrollBehavior","render","changeMsgBody","seenOnRoom","path","username","isOnline","isTyping","m","receiverId","sent","delivered","seen","senderId","target","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReceiveMessage from \"./chatComponents/receivemessage\"\nimport SendMessage from './chatComponents/sendmessage';\nimport { UserContext } from '../contexts/userContext';\nimport Avatar from '@material-ui/core/Avatar';\nimport axios from 'axios';\nrequire(\"dotenv\").config();\n  \n\nvar FontAwesome = require('react-fontawesome');\nclass MiddleComponent extends Component {\n  static contextType = UserContext;\n  \n    state = {\n     \n       scrollUpdate:false,\n         date:\"pops\",\n       lastmsg:null\n\n    }\n \n    newmsgFormat =(cnt) =>\n    {\n      if(cnt===1)\n        return cnt +\" new message\"\n      else{\n        return cnt +\" new messages\"\n      }  \n    }\n  formatDisplay = (msg) =>\n  { \n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var msg_sent = new Date(msg.sentTime)\n     \n      var t_now = new Date()\n      let month = months[msg_sent.getMonth()].slice(0,3)\n      let day  = days[msg_sent.getDay()].slice(0,3)\n      let date = msg_sent.getDate()\n  \n    if(msg_sent.getFullYear()===t_now.getFullYear())\n    {\n      if(msg_sent.getMonth()===t_now.getMonth())\n      {\n        if(msg_sent.getDate()===t_now.getDate())\n        {\n          return \"Today\"\n        }\n        if(t_now.getDate()-msg_sent.getDate()===1)\n         return \"Yesterday\"\n        if(t_now.getDate()-msg_sent.getDate()<=7)\n         return  days[msg_sent.getDay()]\n        else\n         {\n          \n\n           return day +\",\"+date+\" \"+month\n         } \n      }\n      else\n      {\n        return day +\",\"+date+\" \"+month\n      }\n    }\n    else{\n      return day +\",\"+date+\" \"+month+\",\"+msg_sent.getFullYear().toString().slice(-2);\n    }\n  }\n\n  formatMaindate = (msg,lastMsg) =>\n  {  \n    var msg_sent = new Date(msg.sentTime)\n    \n   \n    if(lastMsg==null)\n    {\n     \n       return true\n    }\n    else{\n      let lastmsg = new Date(lastMsg.sentTime)\n      \n      if(lastmsg.getFullYear()===msg_sent.getFullYear()&&lastmsg.getMonth()===msg_sent.getMonth()&&lastmsg.getDate()===msg_sent.getDate())\n      {\n        return false\n      }\n      else{\n       return true\n      }\n  \n    }\n  }\n\n  \ncomponentDidUpdate()\n{ \n  \n  \n  const {middleFlag,cnt, onlineBottom,Bottom,updateBottom} = this.context;\n \n  const container = document.getElementById(\"chatScroll\");\n  if(cnt&&container&&middleFlag)\n  {\n    let t = container.querySelectorAll(\".unread-msg-in-room\");\n    if(t.length)\n    {\n      \n        t[0].parentNode.style.marginBottom =\"4px\"\n      for(let i=1;i<t.length;i++)\n        {\n          t[i].style.display=\"none\"\n        }\n\n    }\n  }\n\n  if(cnt&&onlineBottom&&container)\n  {\n    let t = container.querySelector(\".unread-msg-in-room\");\n   \n    if(t)\n    { \n      container.style.scrollBehavior=\"auto\";\n      \n     container.scrollTop=t.offsetTop-container.offsetTop-container.clientHeight/2;\n        container.style.scrollBehavior=\"smooth\"\n    \n\n    }\n  \n\n  }\n else if(middleFlag&&onlineBottom&&container)\n  {\n \n  \n     \n     container.style.scrollBehavior=\"auto\";\n     container.scrollTop=container.scrollHeight;\n     container.style.scrollBehavior=\"smooth\";\n   \n    \n  }\n else if(Bottom&&container)\n  { \n     container.style.scrollBehavior=\"auto\";\n     container.scrollTop=container.scrollHeight;\n     container.style.scrollBehavior=\"smooth\";\n     updateBottom(false);\n  }\n  \n  \n  \n \n \n \n}\n \n\n          \n         \n       \n       \n\n\nbacktoleft = () =>\n{ \nthis.setState({scrollUpdate:false}) \n\nconst {updatecnt,seenInContext,receiver, onlineBottomUpdate} = this.context\n  onlineBottomUpdate(false);\n  seenInContext(receiver._id);\n  updatecnt(0);\n  \n  \n  document.querySelector(\".leftHome\").style.display=\"flex\";\n \n \n    \n    document.querySelector(\".middleHome\").style.display=\"none\"\n    \n \n \n\n  \n}\n  \n  \n\nopenSearch = () =>{\n  let em = parseFloat( getComputedStyle( document.querySelector('body'))['font-size'])\n    let width = window.innerWidth / em;\n    let height = window.innerHeight/ em;\n    const container = document.getElementById(\"chatScroll\");\n    if(width<90||height<41)\n    {\n      if(container.scrollHeight-container.scrollTop!==container.offsetHeight)\n                document.getElementById(\"myBtn\").style.display=\"grid\";\n             \n               \n                document.querySelector(\".rightHome\").style.display=\"flex\";\n           \n                  document.querySelector(\".middleHome\").style.display=\"none\";\n                \n   \n\n      \n      \n    }\n\n  \n\n}\n\nhandleScroll = e =>{\n  const {onlineBottomUpdate} = this.context;\n  onlineBottomUpdate(false);\n const scrollButton = document.getElementById(\"myBtn\")\n  \n  \n  const container = document.getElementById(\"chatScroll\");\n  \n          \n     let t = container.querySelectorAll(\".date-main\")\n   \n     for(let i=0;i<t.length;i++)\n     {\n         \n       if(t[i].offsetTop<container.scrollTop+120)\n       { \n        this.setState({date:t[i].textContent});\n        \n       \n       }\n     \n       \n     }\n     document.querySelector(\".date\").style.display=\"table\"\n     \n       if(container.scrollHeight-container.scrollTop===container.offsetHeight)\n       {\n       \n        \n        document.querySelector(\".date\").style.display=\"none\"\n        \n        \n       }\n    \n\n       if(container.scrollHeight-container.scrollTop>=container.offsetHeight+container.offsetHeight/2)\n       {\n         \n         scrollButton.style.display=\"grid\";\n       }\n       if(container.scrollHeight-container.scrollTop<container.offsetHeight+container.offsetHeight/2)\n       {\n       \n        scrollButton.style.display=\"none\"\n\n       }\n   const {receiver,messages,id} = this.context\n   var msg;\n   messages.map(chat=>{\n     if(chat.Id===receiver._id)\n     {\n        msg = chat.messages[0]\n     }\n     return 0;\n   })\n    if(0===container.scrollTop&&msg)\n    { this.setState({scrollUpdate:true})\n     document.querySelector(\".date\").style.display=\"none\";\n\n      axios.get(process.env.REACT_APP_BACKEND_URL+\"api/\"+id+\"/getmsg/\"+receiver._id+\"/\"+msg.id).then(res=>\n         { this.setState({scrollUpdate:false}) \n          const {scrollUpdate} = this.context\n          if(res.data.messages.length)\n          {\n            scrollUpdate(res.data.messages)\n          }\n          else\n          { \n             document.querySelector(\".top-msg-end\").style.display=\"grid\";\n             setTimeout(function() {\n              document.querySelector(\".top-msg-end\").style.display=\"none\"\n               }, 1000);\n            \n          }\n        })\n    } \n}\n  \n   \n \n   \n     autoScroll = () => {\n      const container = document.getElementById(\"chatScroll\");\n      if (container) container.scrollTo(0,container.scrollHeight);\n      \n    };\n    send = () =>\n    { const {postmessage,msgBody,updatecnt,seenInContext,receiver,onlineBottomUpdate} = this.context;\n    \n      if(msgBody===\"\")\n    {\n      return null;\n    } \n    const container = document.getElementById(\"chatScroll\");\n    let t = container.querySelectorAll(\".unread-msg-in-room\");\n    if(t.length)\n    {\n        \n        t[0].parentNode.style.marginBottom =\"-2px\"\n    }\n    onlineBottomUpdate(true)\n    updatecnt(0)\n    seenInContext(receiver._id)\n    postmessage();\n     \n\n    }\n    formatSeen = (lastSeen) => \n    { \n       var temp_now = new Date();\n       \n       let day = lastSeen.getDate();\n       let year = lastSeen.getFullYear();\n       let month =lastSeen.getMonth()+1;\n       \n       if(temp_now.getFullYear()!==lastSeen.getFullYear()||temp_now.getMonth()!==lastSeen.getMonth())\n        {\n              \n               return \"Last seen \"+day+\"/\"+month+\"/\"+year\n        }\n        if(temp_now.getMonth()===lastSeen.getMonth())\n        {\n            if((temp_now.getDate() - day) === 0)\n              {\n                let hours = lastSeen.getHours();\n                let minutes = lastSeen.getMinutes();\n                let ampm = hours >= 12 ? 'PM' : 'AM';\n                hours = hours % 12;\n                hours = hours ? hours : 12; // the hour '0' should be '12'\n                minutes = minutes < 10 ? '0'+minutes : minutes;\n                let strTime = hours + ':' + minutes + ' ' + ampm;\n                return \"Last seen Today,at \"+strTime;\n              }\n              else if((temp_now.getDate() - day) === 1)\n              {let hours = lastSeen.getHours();\n                 let minutes = lastSeen.getMinutes();\n                let ampm = hours >= 12 ? 'PM' : 'AM';\n                hours = hours % 12;\n                hours = hours ? hours : 12; // the hour '0' should be '12'\n                minutes = minutes < 10 ? '0'+minutes : minutes;\n                let strTime = hours + ':' + minutes + ' ' + ampm;\n                return \"Last seen Yesterday,at \"+strTime\n              }\n              else{\n                return \"Last seen \"+day+\"/\"+month+\"/\"+year\n              }\n        }\n      var hours = lastSeen.getHours();\n      var minutes = lastSeen.getMinutes();\n      var ampm = hours >= 12 ? 'pm' : 'am';\n      hours = hours % 12;\n      hours = hours ? hours : 12; // the hour '0' should be '12'\n      minutes = minutes < 10 ? '0'+minutes : minutes;\n      var strTime = hours + ':' + minutes + ' ' + ampm;\n      return strTime;\n    }\n    softKeyboardView = () =>\n    { \n      let em = parseFloat( getComputedStyle( document.querySelector('body'))['font-size'])\n      let width = window.innerWidth / em\n      let height = window.innerHeight/ em\n      if(width<60||height<41)\n      {\n       \n        document.getElementById(\"chatInputBox\").scrollIntoView();\n        \n      }\n       \n     \n    }\n    hideSoftKeyboardView = () =>\n     { const {typingEnd} = this.context;\n         typingEnd();\n    //   let em = parseFloat( getComputedStyle( document.querySelector('body'))['font-size'])\n    //   let width = window.innerWidth / em\n    //   let height = window.innerHeight/ em\n    //   if(width<60||height<41)\n    //   {\n       \n    //     document.querySelector(\".home\").style.height =\"100%\"\n        \n       \n    //   }\n    }\n\n   scrollButtonPress = () =>\n    {    \n          const {cntifup,updatecntifup} = this.context;\n          const container = document.getElementById(\"chatScroll\");\n          if(cntifup)\n          {\n            let t = container.querySelectorAll(\".unread-msg-in-room\");\n            \n            if(t)\n            { \n              container.scrollTop=t[0].offsetTop-container.offsetTop-container.clientHeight/2;\n\n               updatecntifup();\n               \n            }\n          }\n          else{\n            this.autoScroll();\n          }\n          \n       \n\n    }\n  \n\n   \n    render() { \n         const { receiver,middleFlag,messages,changeMsgBody,msgBody,seenOnRoom,cnt,cntifup} = this.context;\n       \n        \n        return( \n            middleFlag? <div className=\"middleHome\"  id=\"middle\" >\n             \n              <div className=\"middleHomeHeader\" id=\"middleHomeHeader\">\n               \n           \n             \n              <button className=\"back-button\" id=\"back-button\" onClick={this.backtoleft}  ><FontAwesome name=\"backward\" className=\"BackwardIcon\" ></FontAwesome> </button>  \n              <Avatar alt=\"#\" src={receiver.path}  />\n       \n            \n                <div className=\"header-username-section\" onClick={this.openSearch}>\n                <div className=\"receiverName\" >{receiver.username} </div>\n          \n              \n        <div className=\"lastSeen\">{receiver.isOnline?receiver.isTyping? \"Typing....\": \"Online\" : this.formatSeen(new Date(receiver.lastSeen))  }</div>\n  \n                </div>\n  \n                  \n               </div>\n               <div className=\"top-msg-end\">That's it</div>\n               <div className=\"chatScroll\"  onScroll={this.handleScroll}  id=\"chatScroll\">\n               {this.state.scrollUpdate?<div className=\"date-main loading-msg\"><img src=\"https://firebasestorage.googleapis.com/v0/b/texting--dp.appspot.com/o/dp%2Floading-msg.gif?alt=media&token=dbee82a0-8a49-4f88-8770-d89a06f5855b\"alt=\"#\" className=\"loading-symbol-inside-chat\"/></div>:<span></span>}\n              \n            <div className=\"outer-div\">   <p className=\"date\">{this.state.date}</p> </div>\n               <ul className=\"list-none\">\n              \n                   {messages.map(msg=>{\n                  \n                    \n                      if(msg.Id===receiver._id)\n                     {   var lastmsg =null\n                        return( msg.messages.map(m =>{\n                         \n                        if(m.receiverId===receiver._id)\n                        {   if(this.formatMaindate(m,lastmsg))\n                             {  lastmsg=m;\n                              return( \n                                \n                                <li key={m.id} id=\"sendTop\" className=\"middle-message\">\n                               \n                                <p className=\"date-main\">{this.formatDisplay(m)}</p>\n                               \n                             <SendMessage msgBody={m.msgBody} sentTime={m.sentTime} status={{sent:m.sent,delivered:m.delivered,seen:m.seen}}/>\n                             </li>\n                            )\n                             }\n                             else\n                             {  lastmsg=m;\n                              return( \n                            \n                                <li key={m.id} id=\"send\" className=\"middle-message\">\n                              \n                             <SendMessage msgBody={m.msgBody}  sentTime={m.sentTime} status={{sent:m.sent,delivered:m.delivered,seen:m.seen}}/>\n                             </li>)\n                             }\n                            \n                        }\n                       \n                       \n                          if(m.senderId===receiver._id)\n                         { \n                           if(!m.seen&&document.querySelector(\".middleHome\").style.display!==\"none\")\n                           {\n                                   seenOnRoom(m); \n                                     \n                                   \n                                   \n                                  \n                                    \n                                   \n                           }\n                           if(this.formatMaindate(m,lastmsg))\n                           {\n                            lastmsg=m;\n                            \n                            return (\n                              \n                             \n                             \n                                \n                                  <li key={m.id}  id=\"receiveTop\" className=\"middle-message\">\n                                   {!m.seen?<p className=\"unread-msg-in-room\">{this.newmsgFormat(cnt)}</p>:<span></span>}\n                                  <p className=\"date-main\">{this.formatDisplay(m)}</p> \n                                 \n                          \n                              <ReceiveMessage msgBody={m.msgBody}  sentTime={m.sentTime} />\n                              </li>\n                              )\n                             \n                           }\n                           else{\n                           \n                            lastmsg=m;\n                            return (<li key={m.id}   id=\"receive\" className=\"middle-message\">\n                               {!m.seen?<p className=\"unread-msg-in-room\">{this.newmsgFormat(cnt)}</p>:<span></span>}\n                              <ReceiveMessage msgBody={m.msgBody}  sentTime={m.sentTime} />\n                              </li>)\n\n                           }\n\n                          \n                         }  \n                       \n                        return null;\n                       })\n                       )\n                    } \n                    return null;\n                      }\n                      \n                     )} \n               </ul>\n               \n                    \n                 </div >\n                 <div onClick={this.scrollButtonPress} id=\"myBtn\" title=\"press to go down\"><img src=\"images/down-arrow.png\"alt=\"#\" className=\"down-arrow\"/>{cntifup?<div className='unseen-msg'><p className=\"center-cnt\">{cntifup}</p></div>:<span></span>}</div>\n          \n                  \n             <div onBlur={this.hideSoftKeyboardView} id=\"chatInputBox\" >\n                 <input onClick={this.softKeyboardView}  onChange={ e => {changeMsgBody(e.target.value);}} placeholder=\"Type Something...\" className=\"messageInput\" value = {msgBody} />\n                \n            \n              \n                  <button onClick={e=>{this.send()}}  className=\"messageButton\">Send</button>\n             </div> \n\n           \n                    \n                \n             \n    </div>:\n            <div className=\"middleHome middleEmpty\"  id=\"middle\"> \n           \n               <span  id=\"back-button\" /> \n             \n            <h3> Chat Room </h3>\n            <img className=\"middle-img\" alt=\"#\"src=\"./images/chatmiddle.png\"/>\n          </div>\n          );\n\n     \n       \n    }\n}\n\nexport default MiddleComponent;"]},"metadata":{},"sourceType":"module"}